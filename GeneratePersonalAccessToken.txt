GitHub authentication modes:
1. HTTPS (using a personal access token (PAT) genered on GitHub --> Settings --> Developer settings --> Personal access tokens)
2. SSH (using SSH-keys which need to be generted and put on GitHub --> Setting --> SSH and GPG keys)
3. GitHub CLI (the default authentication mode is a web-based browser flow); see gh auth login: https://cli.github.com/manual/gh_auth_login


Creating a personal access token
You should create a personal access token to use in place of a password with the command line or with the API.
You can find how to generate your Authentication Token here:
https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token

Warning: Treat your tokens like passwords and keep them secret. When working with the API, use tokens as environment variables instead of hardcoding them into your programs.	 

Once you have a token, you can enter it instead of your password when performing Git operations over HTTPS.
For example, on the command line you would enter the following:
$ git clone https://github.com/username/repo.git
Username: your_username
Password: your_token
e.g.: $ git clone https://<TOKEN>@github.com/SvitlanaPY/TestGithubToken.git

Personal access tokens can only be used for HTTPS Git operations. 

If your repository uses an SSH remote URL, you will need to switch the remote from SSH to HTTPS.
You can easily change your remote Authentication, first:
Remove your current origin:
git remote remove origin
And then:
git remote add origin https://<TOKEN>@github.com/<USERNAME>/<REPO>.git
e.g. https://<TOKEN>@github.com/SvitlanaPY/TestGithubToken.git


Managing remote repositories:
https://docs.github.com/en/get-started/getting-started-with-git/managing-remote-repositories#switching-remote-urls-from-ssh-to-https

Adding a remote repository with SSH URL: 
To add remote with SSH URL, use the git remote add command on the terminal, in the directory your repository is stored at.

The git remote add command takes two arguments:
A remote name, for example, origin
A remote SSH URL, for example, git@github.com:<username>/<repo>.git
$ git remote add origin git@github.com:<username>/<repo>.git
# To verify remote
$ git remote -v
> origin  git@github.com:<username>/<repo>.git (fetch)
> origin  git@github.com:<username>/<repo>.git (push)



Cloning GitHub repo with HTTPS URLs:
https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories

The https:// clone URLs are available on all repositories, regardless of visibility. 
https:// clone URLs work even if you are behind a firewall or proxy.

When you git clone, git fetch, git pull, or git push to a remote repository using HTTPS URLs on the command line, Git will ask for your GitHub username and password. 
When Git prompts you for your password, enter your personal access token (PAT) instead. 
Password-based authentication for Git has been removed, and using a PAT is more secure. 
For more information, see "Creating a personal access token.": 
https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token



